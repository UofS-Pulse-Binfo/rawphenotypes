<?php
/**
 * @class
 * Purpose: Provide a quick search on entity pages which submits/redirects to a full search.
 *
 * Display: A simple textfield search form.
 * Configuration:
 *   - path to the full search.
 *   - the URL token (query parameter) the value applies to.
 *   - help text.
 *   - textfield placeholder.
 *   - search button text.
 *   - autocomplete path.
 */
class ncit__raw_data_formatter extends TripalFieldFormatter {
  // The default label for this field.
  public static $default_label = 'Germplasm Raw Phenotypes';

  // The list of field types for which this formatter is appropriate.
  public static $field_types = array('ncit__raw_data');

  /**
   *  Provides the display for a field
   *
   * This function corresponds to the hook_field_formatter_view()
   * function of the Drupal Field API.
   *
   *  This function provides the display for a field when it is viewed on
   *  the web page.  The content returned by the formatter should only include
   *  what is present in the $items[$delta]['values] array. This way, the
   *  contents that are displayed on the page, via webservices and downloaded
   *  into a CSV file will always be identical.  The view need not show all
   *  of the data in the 'values' array.
   *
   *  @param $element
   *  @param $entity_type
   *  @param $entity
   *  @param $langcode
   *  @param $items
   *  @param $display
   *
   *  @return
   *    An element array compatible with that returned by the
   *    hook_field_formatter_view() function.
   */
  public function view(&$element, $entity_type, $entity, $langcode, $items, $display) {
    // If germplasm has phenotypes and user has permission to access raw phenotypes.
    if ($items[0]['value'] && $items[0]['value']['phenotype_rawdatafield_terms:permission']) {      
      $user_experiment = $items[0]['value']['phenotype_rawdatafield_terms:experiment'];
      $summary_values = $items[0]['value']['phenotype_rawdatafield_terms:summary'];
      
      // All trait and experiment+location values are accessible through this var.
      $germplasm_raw_phenotypes = $items[0]['value']['hydra:member'];

      // Reference directory path.
      $base_path  = $GLOBALS['base_url'] . '/'; 
      $module_path = drupal_get_path('module', 'rawpheno') . '/';
      $theme_path   = $base_path . $module_path . '/includes/TripalFields/ncit__raw_data/theme/';
      
      // Append image as bullet points, header icon and export button or link.
      $img = '<img id="rawphenotypes-germplasm-field-trait-select-%s-img" src="%s" border="0" align="absmiddle" alt="Download Raw Phenotypic Data" title="Download Raw Phenotypic Data" />';
      
      // CONSTRUCT SUMMARY TABLE:
      // # TABLE HEADER:
      $table_header = array('Trait', 'LOCATION/Experiment', sprintf($img, '', $theme_path . 'icon-download.jpg'));
      
      // # TABLE ROWS:
      $table_row = array();       
      foreach($germplasm_raw_phenotypes as $id => $exp_loc) {
        $trait_name = $exp_loc['phenotype_rawdatafield_terms:id'];
        $trait_id = $exp_loc['phenotype_rawdatafield_terms:name'];

        $select = $this->create_select($entity->chado_record->stock_id, $exp_loc, $user_experiment);
        $table_row[ $id ] = array(sprintf($img, '', $theme_path . 'icon-leaf.png') . ucfirst($trait_name), $select, sprintf($img, $trait_id, $theme_path . 'icon-export.png')); 
      }
      
      // # THEME TABLE:
      $summary_table = theme('table', array(
        'header' => $table_header, 
        'rows' => $table_row, 
        'sticky' => FALSE, 
        'attributes' => array('id' => 'rawphenotypes-germplasm-field-table'))
      );
      
      // Make field elements generated by formatter avaiable to the template as template vars.
      // @see template file for this field in rawphenotypes/theme directory.
      $markup = theme('rawpheno_germplasm_field', array(
        'element_id' => 'rawphenotypes-germplasm-raw-phenotypes-field',
        'summary_table' => array(
          'table' => $summary_table,
          'headers' => array(
            'experiments' => $summary_values['phenotype_rawdatafield_terms:experiment'],   
            'locations'  => $summary_values['phenotype_rawdatafield_terms:location'],
            'germplasm' => $entity->chado_record->name,
            'traits'   => $summary_values['phenotype_rawdatafield_terms:trait'], 
          )
        )
      ));

      // Rawphenotypes download link:
      drupal_add_js(array('rawpheno' => array('exportLink' => $base_path . '/phenotypes/raw/download')), array('type' => 'setting'));

      // Construct field render array.
      $element[0] = array(
        '#type' => 'markup',
        '#markup' => $markup,
        '#attached' => array(
          'css' => array($module_path . 'theme/css/rawpheno.germplasmfield.style.css'),
          'js'  => array($module_path . 'theme/js/rawpheno.germplasmfield.script.js')
        )
      );      
    }

    return $element;
  }
  
  /**
   * Create select field.
   * 
   * @param $germplasm
   *   Stock id number.
   * @param $items
   *   Associative array, where each item will be rendered as an option
   *   with key as the value and value as text.
   * @param $user_experiments
   *   Array of experiments user has access to. This will be used to cross check
   *   if experiment should be enabled or disabled to a user
   */
  public function create_select($germplasm, $items, $user_experiments) {
    $option = array();
    $cache_exp = array();
    
    foreach($items as $loc_exp) {
      $trait_experiment = $loc_exp['phenotype_rawdatafield_terms:experiment'];

      $select_value = $loc_exp['phenotype_rawdatafield_terms:id'] . '#' . $trait_experiment['phenotype_rawdatafield_terms:id'] . '#' . $trait_experiment['phenotype_rawdatafield_terms:location'] . '#' . $germplasm;
      $cache_exp[] = $trait_experiment['phenotype_rawdatafield_terms:id'];

      $disabled = (in_array($trait_experiment['phenotype_rawdatafield_terms:id'], $user_experiments)) ? '' : 'disabled';
      $option[] = '<option value ="' . $select_value . '" ' . $disabled . '>' . strtoupper($trait_experiment['phenotype_rawdatafield_terms:location']) . '/' . $trait_experiment['phenotype_rawdatafield_terms:name'] . '</option>';
    }
  
    $select = '<select class="form-select" id="rawphenotypes-germplasm-field-trait-select-' . $loc_exp['phenotype_rawdatafield_terms:id'] . '">
    <option value="0" selected>Select (' . count($items) . ' Locations, ' . count(array_unique($cache_exp)) . ' Experiments)</option>
    %s
    </select>';

    return sprintf($select, implode('', $option));
  }
}

