<?php

/**
 * @file
 * The main functionality for this module.
 */

use Drupal\Core\Url;
use Drupal\Core\Routing;

/**
 * Implements hook_theme().
 *
 * @see templates in /templates
 */
function rawphenotypes_theme($existing, $type, $theme, $path) {  
  $variables = [];
  $config = \Drupal::config('rawphenotypes.settings');

  // Colour scheme.
  $variables['theme_colour'] = $config->get('rawpheno_colour_scheme');
  // Path to module.
  $module = \Drupal::service('extension.list.module')
    ->getPath('rawphenotypes');
  global $base_url;  
  $path_module = $base_url. base_path() . $module;
  
  $variables = [
     // Messages - error, warning and status.
    'theme-rawphenotypes-message' => [
      'variables' => ['data' => []],
      'template' => 'template-rawphenotypes-message'
    ],
    // Instructions page.
    'rawphenotypes_page_instructions_template' => [
      'variables' => ['search_form' => NULL, 'page' => $variables, 'path' => $path_module],
      'template' => 'template-rawphenotypes-page-instructions',
      'render element' => 'form'
    ],
    // Backup page.
    'rawphenotypes_page_backup_template' => [
      'variables' => ['upload_form' => NULL, 'page' => $variables, 'path' => $path_module],
      'template' => 'template-rawphenotypes-page-backup',
      'render element' => 'form'
    ],
  ];

  return $variables;
}

/**
 * Implements a hook_preprocess_HOOK().
 * This function prepares variables for Raw Phenotypes Instuctions Page.
 */
function rawphenotypes_preprocess_rawphenotypes_page_instructions_template(&$variables, $hook) {
  $config = \Drupal::config('rawphenotypes.settings');
  $variables['title'] = $config->get('rawpheno_instructions_title');

  // Links to other pages.
  $variables['to_upload'] = Url::fromRoute('rawphenotypes.page_upload', [], ['absolute' => TRUE]);
  $variables['to_backup'] = Url::fromRoute('rawphenotypes.page_backup', [], ['absolute' => TRUE]);
  // Parameter project_id is appended in the template.
  $variables['to_collect'] = Url::fromRoute('rawphenotypes.callback.generate_spreadsheet', [], ['absolute' => TRUE]);
}

/**
 * Implements a hook_preprocess_HOOK().
 * This function prepares variables for Raw Phenotypes Backup Page.
 */
function rawphenotypes_preprocess_rawphenotypes_page_backup_template(&$variables, $hook) {
  $config = \Drupal::config('rawphenotypes.settings');
  $variables['title'] = $config->get('rawpheno_backup_title');
  
  // Links to other pages.
  $variables['to_instructions'] = Url::fromRoute('rawphenotypes.page_instructions', [], ['absolute' => TRUE]);
  
  // Currently logged in user. Show the name of the user.
  $user_id = \Drupal::currentUser()->id();
  $user = \Drupal::service('rawphenotypes.user_service')::getUser((int)$user_id, ['name']);
  $variables['current_user'] = $user['name'];
  /*
  $variables['to_backup'] = Url::fromRoute('rawphenotypes.page_backup', [], ['absolute' => TRUE]);
  // Parameter project_id is appended in the template.
  $variables['to_collect'] = Url::fromRoute('rawphenotypes.callback.generate_spreadsheet', [], ['absolute' => TRUE]);
  */
}




/**
 * Implements hook_libraries_info().
 *
 * Define external libraries: Spreadsheet Reader and D3JS
 */
function rawphenotypes_libraries_info() {
  // Spreadsheet reader
  // File option is empty since library files are included
  // individually using include_once().
  // files in: sites/all/libraries/spreadsheet-reader
  //   - SpreadsheetReader.php
  //   - SpreadsheetReaderXLSX.php
  //   - SpreadsheetReaderXLS.php
  //   - php-excel-reader/excel_reader2.php

  // NOTE: To prevent library form auto formatting data to MM/DD/YYYY,
  //       suggest a new data format YYYY-mm-dd in the source code in line:
  //       * line 678 in excel_reader2.php
  //           0xe = "m/d/Y to 0xe => "Y-m-d"
  //       * line 834 in SpreadsheetReader_XLSX.php
  //           $Value = $Value -> format($Format['Code']); to $Value = $Value -> format('Y-m-d');

  // Let Drupal decide where library is.
  $lib_reader = libraries_get_path('spreadsheet-reader');

  $libraries['spreadsheet_reader'] = [
    'name' => 'NUOVO Spreadsheet',
    'vendor url' => 'https://github.com/nuovo/spreadsheet-reader',
    'version callback' => 'rawpheno_function_reader_version_callback',
    'download url' => 'https://github.com/nuovo/spreadsheet-reader/archive/master.zip',
    'library path' => $lib_reader,
    'path' => $lib_reader . '/',
    'files' => [],
  ];

  // Spreadsheet writer.
  // Let Drupal decide where library is.
  $lib_writer = libraries_get_path('PHP_XLSXWriter_plus');

  $libraries['spreadsheet_writer'] = [
    'name' => 'PHP_XLSXWriter_plus Spreadsheet Writer',
    'vendor url' => 'https://github.com/SystemDevil/PHP_XLSXWriter_plus',
    'version' => 1,
    'download url' => 'https://github.com/SystemDevil/PHP_XLSXWriter_plus/archive/master.zip',
    'library path' => $lib_writer,
    'files' => ['xlsxwriter.class.php'],
  ];

  // D3 JavaScript.
  // Let Drupal decide where library is
  $lib_d3 = libraries_get_path('d3');

  $libraries['d3js'] = [
    'name' => 'D3 Data-Driven Documents',
    'vendor url' => 'https://d3js.org/',
    'version callback' => 'rawpheno_function_d3_version_callback',
    'download url' => 'https://github.com/d3/d3/releases/download/v3.5.14/d3.zip',
    'library path' => $lib_d3,
    'files' => [
      'js' => ['d3.js']
    ],
  ];

  return $libraries;
}